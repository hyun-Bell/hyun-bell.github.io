---
import { getCollection, type CollectionEntry } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import { formatDate } from '@/lib/utils/date';
import { getNotionClient } from '@/lib/notion/client';
import { parseNotionMarkdown } from '@/lib/notion/markdown-parser';
import '@/styles/prism-theme.css';
import '@/styles/blog-content.css';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.data.slug },
    props: { post },
  }));
}

interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { data } = post;

const client = getNotionClient();
const content = await client.getPageContent(data.id);
const htmlContent = parseNotionMarkdown(content);
---

<BaseLayout title={data.title} description={data.description} type="article">
  <article class="mx-auto max-w-3xl">
    <header class="mb-12 text-center">
      <div class="mb-4 font-mono text-sm text-gray-500 dark:text-gray-500">
        <time datetime={data.publishDate.toISOString()}>
          {formatDate(data.publishDate)}
        </time>
        {
          data.readingTime && (
            <>
              <span class="mx-2">•</span>
              <span>{data.readingTime}min read</span>
            </>
          )
        }
      </div>

      <h1
        class="mb-4 text-3xl font-bold text-gray-900 dark:text-gray-100 sm:text-4xl"
        transition:name={`post-${data.slug}`}
      >
        {data.title}
      </h1>
    </header>

    <div class="blog-content" set:html={htmlContent} />

    <footer class="mt-16 border-t border-gray-200 pt-8 dark:border-gray-800">
      <a
        href="/posts"
        class="inline-flex items-center gap-2 font-mono text-sm text-blue-600 hover:underline dark:text-blue-400"
      >
        <span>←</span>
        back to list
      </a>
    </footer>
  </article>
</BaseLayout>
