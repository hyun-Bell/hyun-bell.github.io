---
import { getCollection } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import PostListItem from '@/components/blog/PostListItem.astro';
import Pagination from '@/components/blog/Pagination.astro';
import { SITE_CONFIG } from '@/lib/constants/site';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const publishedPosts = posts.filter((post) => post.data.published);
  const sortedPosts = publishedPosts.sort(
    (a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime(),
  );

  const postsPerPage = SITE_CONFIG.postsPerPage;
  const totalPages = Math.ceil(sortedPosts.length / postsPerPage);

  return Array.from({ length: totalPages }, (_, i) => {
    const pageNum = i + 1;
    const start = i * postsPerPage;
    const end = start + postsPerPage;

    return {
      params: { page: pageNum === 1 ? undefined : pageNum.toString() },
      props: {
        posts: sortedPosts.slice(start, end),
        currentPage: pageNum,
        totalPages,
        totalPosts: sortedPosts.length,
      },
    };
  });
}

const { posts, currentPage, totalPages, totalPosts } = Astro.props;
---

<BaseLayout title="포스트" description="개발 관련 글들을 모아놓은 공간">
  <div class="mx-auto max-w-3xl">
    <header class="mb-12">
      <h1 class="mb-4 font-mono text-3xl font-bold">
        <span class="text-blue-600 dark:text-blue-400">~/</span>posts
      </h1>
      <p class="font-mono text-sm text-gray-600 dark:text-gray-400">
        total: {totalPosts} posts | page: {currentPage}/{totalPages}
      </p>
    </header>

    <div class="space-y-2">
      {posts.map((post, index) => <PostListItem post={post} index={index} showNumber={true} />)}
    </div>

    {
      totalPages > 1 && (
        <div class="mt-12">
          <Pagination currentPage={currentPage} totalPages={totalPages} basePath="/posts" />
        </div>
      )
    }
  </div>
</BaseLayout>
