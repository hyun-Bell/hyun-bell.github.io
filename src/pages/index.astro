---
import BaseLayout from '@/layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

// 블로그 포스트 가져오기
const allPosts = await getCollection('blog');
const sortedPosts = allPosts.sort(
  (a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime(),
);

// 메인페이지에 표시할 최신 포스트
const recentPosts = sortedPosts.slice(0, 6);
---

<BaseLayout>
  <div class="container py-8">
    <!-- 심플한 헤더 -->
    <header class="mb-12">
      <h1 class="font-mono text-2xl font-bold text-gray-900 dark:text-gray-100">
        <span class="text-primary-500">&gt;</span> Recent Posts_
      </h1>
      <p class="mt-2 font-mono text-sm text-gray-600 dark:text-gray-400">
        /* {sortedPosts.length} posts available */
      </p>
    </header>

    <!-- 포스트 목록 -->
    <div class="space-y-4">
      {
        recentPosts.map((post, index) => (
          <article class="group">
            <a
              href={`/blog/${post.data.slug}`}
              class="block border-l-2 border-transparent py-4 pl-4 transition-all hover:border-primary-500 hover:bg-gray-50 dark:hover:bg-gray-900/50"
            >
              <div class="flex items-start justify-between gap-4">
                <div class="flex-1">
                  <div class="flex items-center gap-3 font-mono text-xs text-gray-500 dark:text-gray-500">
                    <span class="text-primary-500">{String(index + 1).padStart(2, '0')}</span>
                    <time datetime={post.data.publishDate.toISOString()}>
                      {post.data.publishDate.toISOString().split('T')[0]}
                    </time>
                    {post.data.readingTime && <span>{post.data.readingTime}min read</span>}
                  </div>
                  <h2 class="mt-1 text-lg font-semibold text-gray-900 group-hover:text-primary-600 dark:text-gray-100 dark:group-hover:text-primary-400">
                    {post.data.title}
                  </h2>
                  {post.data.description && (
                    <p class="mt-1 line-clamp-2 text-sm text-gray-600 dark:text-gray-400">
                      {post.data.description}
                    </p>
                  )}
                  {post.data.tags.length > 0 && (
                    <div class="mt-2 flex flex-wrap gap-2">
                      {post.data.tags.map((tag) => (
                        <span class="font-mono text-xs text-gray-500 dark:text-gray-500">
                          #{tag}
                        </span>
                      ))}
                    </div>
                  )}
                </div>
              </div>
            </a>
          </article>
        ))
      }
    </div>

    <!-- 더보기 링크 -->
    {
      sortedPosts.length > 6 && (
        <div class="mt-12 text-center">
          <a
            href="/blog"
            class="inline-flex items-center gap-2 font-mono text-sm text-primary-600 hover:text-primary-700 dark:text-primary-400 dark:hover:text-primary-300"
          >
            <span>View all posts</span>
            <span class="text-lg">→</span>
          </a>
        </div>
      )
    }
  </div>
</BaseLayout>
