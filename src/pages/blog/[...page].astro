---
import { getCollection } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import BlogCard from '@/components/blog/BlogCard.astro';
import Pagination from '@/components/blog/Pagination.astro';
import { SITE_CONSTANTS } from '@/lib/constants';
import type { CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const allPosts = await getCollection('blog');

  if (allPosts.length === 0) {
    return [
      {
        params: { page: undefined },
        props: {
          posts: [],
          currentPage: 1,
          totalPages: 1,
          totalPosts: 0,
        },
      },
    ];
  }

  // 날짜순 정렬
  const sortedPosts = allPosts.sort(
    (a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime(),
  );

  const postsPerPage = SITE_CONSTANTS.POSTS_PER_PAGE;
  const totalPages = Math.ceil(sortedPosts.length / postsPerPage);

  // 모든 페이지 생성
  return Array.from({ length: totalPages }, (_, i) => {
    const pageNum = i + 1;
    const start = i * postsPerPage;
    const end = start + postsPerPage;

    return {
      params: {
        page: pageNum === 1 ? undefined : pageNum.toString(),
      },
      props: {
        posts: sortedPosts.slice(start, end),
        currentPage: pageNum,
        totalPages,
        totalPosts: sortedPosts.length,
      },
    };
  });
}

interface Props {
  posts: CollectionEntry<'blog'>[];
  currentPage: number;
  totalPages: number;
  totalPosts: number;
}

const { posts, currentPage, totalPages, totalPosts } = Astro.props;

// 페이지 타이틀
const pageTitle = currentPage === 1 ? '블로그' : `블로그 - ${currentPage}페이지`;
---

<BaseLayout title={pageTitle} description="개발 관련 인사이트와 경험을 공유하는 기술 블로그">
  <div class="container py-8">
    <!-- 헤더 -->
    <header class="mb-8">
      <h1 class="font-mono text-2xl font-bold text-gray-900 dark:text-gray-100">
        <span class="text-primary-500">&gt;</span> Blog_
      </h1>
      <p class="mt-2 font-mono text-sm text-gray-600 dark:text-gray-400">
        /* Total {totalPosts} posts */
      </p>
    </header>

    <!-- 포스트 목록 -->
    <div class="space-y-1">
      {
        posts.length > 0 ? (
          posts.map((post) => (
            <BlogCard
              post={{
                ...post.data,
                published: post.data.published,
                tags: post.data.tags,
                featured: post.data.featured,
              }}
            />
          ))
        ) : (
          <div class="py-12 text-center">
            <p class="font-mono text-gray-600 dark:text-gray-400">// No posts found</p>
          </div>
        )
      }
    </div>

    <!-- 페이지네이션 -->
    {
      totalPages > 1 && (
        <div class="mt-12">
          <Pagination currentPage={currentPage} totalPages={totalPages} basePath="/blog" />
        </div>
      )
    }
  </div>
</BaseLayout>
