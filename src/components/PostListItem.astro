---
import { formatDate } from '@/lib/utils/date';
import { ROUTES } from '@/lib/constants/site';
import type { CollectionEntry } from 'astro:content';

export interface Props {
  post: CollectionEntry<'blog'>;
  index?: number;
  showNumber?: boolean;
}

const { post, index = 0, showNumber = false } = Astro.props;
const postUrl = `${ROUTES.posts}/${post.data.slug}`;
---

<article
  class="animate-fadeIn group relative rounded-lg border border-gray-200 bg-white p-6 hover:border-gray-300 hover:shadow-md dark:border-gray-800 dark:bg-gray-900 dark:hover:border-gray-700"
  style={`animation-delay: ${index * 50}ms`}
>
  <a href={postUrl} class="absolute inset-0 z-10">
    <span class="sr-only">{post.data.title} 읽기</span>
  </a>

  <div class="flex flex-col gap-3">
    <div class="flex items-center gap-2 text-sm text-gray-500 dark:text-gray-400">
      {
        showNumber && (
          <span class="font-mono text-xs text-gray-400 dark:text-gray-600">
            {String(index + 1).padStart(2, '0')}
          </span>
        )
      }
      <time datetime={post.data.publishDate.toISOString()}>
        {formatDate(post.data.publishDate)}
      </time>
      {
        post.data.tags && post.data.tags.length > 0 && (
          <>
            <span>•</span>
            <div class="flex flex-wrap gap-2">
              {post.data.tags.slice(0, 3).map((tag) => (
                <span class="font-mono text-xs">#{tag}</span>
              ))}
            </div>
          </>
        )
      }
    </div>

    <h3
      class="post-title font-mono text-lg font-semibold text-gray-900 dark:text-gray-100"
      transition:name={`post-${post.data.slug}`}
    >
      {post.data.title}
    </h3>

    {
      post.data.description && (
        <p class="line-clamp-2 text-gray-600 dark:text-gray-400">{post.data.description}</p>
      )
    }
  </div>
</article>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fadeIn {
    animation: fadeIn 0.5s ease-out forwards;
    opacity: 0;
  }

  /* View Transitions가 활성화된 경우 기본 애니메이션 비활성화 */
  @media (prefers-reduced-motion: no-preference) {
    :root:has(.astro-route-announcer) .animate-fadeIn {
      animation: none;
      opacity: 1;
    }
  }

  /* 포스트 제목 스타일 */
  .post-title {
    display: block;
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
</style>
