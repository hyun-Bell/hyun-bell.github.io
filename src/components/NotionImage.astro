---
/**
 * Notion 이미지 컴포넌트
 * blur placeholder와 함께 점진적 로딩 지원
 */

import { Image } from 'astro:assets';

interface Props {
  src: string;
  alt: string;
  width: number;
  height: number;
  blurDataURL?: string;
  caption?: string;
  class?: string;
}

const { src, alt, width, height, blurDataURL, caption, class: className } = Astro.props;

// Astro의 Image 컴포넌트를 위한 원격 이미지 처리
const imageProps = {
  src,
  alt,
  width,
  height,
  loading: 'lazy' as const,
  decoding: 'async' as const,
  class: `notion-image ${className || ''}`,
};
---

<figure class="blog-figure">
  {
    blurDataURL ? (
      <div class="image-wrapper" data-blur-placeholder>
        <img
          src={blurDataURL}
          alt=""
          aria-hidden="true"
          class="blur-placeholder"
          width={width}
          height={height}
        />
        <Image {...imageProps} />
      </div>
    ) : (
      <Image {...imageProps} />
    )
  }
  {caption && <figcaption>{caption}</figcaption>}
</figure>

<style>
  .blog-figure {
    margin: 2rem 0;
  }

  .image-wrapper {
    position: relative;
    overflow: hidden;
    background-color: #f5f5f5;
  }

  .blur-placeholder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    filter: blur(20px);
    transform: scale(1.1);
    opacity: 1;
    transition: opacity 0.3s ease-in-out;
  }

  .image-wrapper img:not(.blur-placeholder) {
    position: relative;
    z-index: 1;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
  }

  .image-wrapper img:not(.blur-placeholder)[data-loaded='true'] {
    opacity: 1;
  }

  .image-wrapper img:not(.blur-placeholder)[data-loaded='true'] ~ .blur-placeholder {
    opacity: 0;
  }

  .notion-image {
    width: 100%;
    height: auto;
    max-width: 100%;
    display: block;
  }

  figcaption {
    margin-top: 0.75rem;
    text-align: center;
    font-size: 0.875rem;
    color: #666;
  }
</style>

<script>
  // 이미지 로드 완료 시 blur placeholder 제거
  document.addEventListener('DOMContentLoaded', () => {
    const images = document.querySelectorAll('.image-wrapper img:not(.blur-placeholder)');

    images.forEach((img) => {
      if (img instanceof HTMLImageElement && img.complete) {
        img.setAttribute('data-loaded', 'true');
      } else {
        img.addEventListener('load', () => {
          img.setAttribute('data-loaded', 'true');
        });
      }
    });
  });
</script>
