---
import { ClientRouter } from 'astro:transitions';
import '../styles/global.css';
import ThemeScript from '../components/ThemeScript.astro';
import Header from '../components/layout/Header.astro';
import Footer from '../components/layout/Footer.astro';
import SEO from '../components/SEO.astro';
import { SITE_CONFIG } from '@/lib/constants/site';

export interface Props {
  title?: string;
  description?: string | undefined;
  image?: string | undefined;
  type?: 'website' | 'article';
}

const {
  title = SITE_CONFIG.title,
  description = SITE_CONFIG.description,
  image,
  type = 'website',
} = Astro.props;

const pageTitle = title === SITE_CONFIG.title ? title : `${title} | ${SITE_CONFIG.title}`;
---

<!doctype html>
<html lang="ko" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <meta name="theme-color" content="#0f172a" media="(prefers-color-scheme: dark)" />
    <meta name="theme-color" content="#ffffff" media="(prefers-color-scheme: light)" />

    <!-- 테마 스크립트 (FOUC 방지) -->
    <ThemeScript />

    <!-- Critical CSS for preventing flicker -->
    <style is:inline>
      /* 플리커링 방지를 위한 크리티컬 CSS */
      html {
        color-scheme: light;
      }
      html.dark {
        color-scheme: dark;
      }
    </style>

    <!-- SEO -->
    <SEO title={pageTitle} description={description} image={image} type={type} />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;600&display=swap"
      rel="stylesheet"
    />

    <!-- ClientRouter -->
    <ClientRouter />
  </head>
  <body>
    <div
      class="flex min-h-screen flex-col bg-white text-gray-900 dark:bg-gray-950 dark:text-gray-100"
    >
      <Header />

      <main class="container mx-auto flex-1 px-4 py-8 sm:px-6 lg:px-8">
        <slot />
      </main>

      <Footer />
    </div>

    <script>
      import { themeManager } from '@/lib/theme-manager';

      // 초기 로드 처리
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
          themeManager.init();
        });
      } else {
        themeManager.init();
      }

      // View Transitions 이벤트
      document.addEventListener('astro:page-load', () => {
        themeManager.reinit();
      });

      // View Transitions 중 테마 유지
      document.addEventListener('astro:before-swap', (event) => {
        const isDark = document.documentElement.classList.contains('dark');
        if (isDark && event.newDocument) {
          event.newDocument.documentElement.classList.add('dark');
        }
      });
    </script>
  </body>
</html>

<style is:global>
  /* View Transitions 애니메이션 */
  @keyframes fade-in {
    from {
      opacity: 0;
    }
  }

  @keyframes fade-out {
    to {
      opacity: 0;
    }
  }

  @keyframes slide-from-right {
    from {
      transform: translateX(30px);
    }
  }

  @keyframes slide-to-left {
    to {
      transform: translateX(-30px);
    }
  }

  /* 기본 페이지 전환 애니메이션 */
  ::view-transition-old(root) {
    animation:
      150ms cubic-bezier(0.4, 0, 1, 1) both fade-out,
      300ms cubic-bezier(0.4, 0, 0.2, 1) both slide-to-left;
  }

  ::view-transition-new(root) {
    animation:
      150ms cubic-bezier(0, 0, 0.2, 1) 150ms both fade-in,
      300ms cubic-bezier(0.4, 0, 0.2, 1) both slide-from-right;
  }

  /* 포스트 제목 전환 - 겹침 방지 */
  ::view-transition-old(post-*) {
    animation: 200ms ease-out forwards fade-out;
  }

  ::view-transition-new(post-*) {
    animation: 200ms ease-out forwards fade-in;
  }

  /* View Transition 그룹 */
  ::view-transition-group(post-*) {
    isolation: isolate;
  }

  /* View Transition 이미지 페어 */
  ::view-transition-image-pair(post-*) {
    isolation: isolate;
  }

  /* 모든 transition name에 대한 기본 설정 */
  [style*='view-transition-name'] {
    contain: layout;
  }

  /* prefers-reduced-motion 지원 */
  @media (prefers-reduced-motion: reduce) {
    ::view-transition-old(*),
    ::view-transition-new(*) {
      animation-duration: 0.01ms !important;
    }
  }
</style>
