name: Scheduled Content Update

on:
  schedule:
    - cron: '0 0 * * *' # UTC 0Ïãú = KST Ïò§Ï†Ñ 9Ïãú
    - cron: '0 8 * * *' # UTC 8Ïãú = KST Ïò§ÌõÑ 5Ïãú
    - cron: '0 15 * * *' # UTC 15Ïãú = KST Ïò§Ï†Ñ 0Ïãú

  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force build even if no updates'
        required: false
        type: boolean
        default: false

  repository_dispatch:
    types: [content-update]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    outputs:
      should_deploy: ${{ steps.check-updates.outputs.has_updates == 'true' || github.event.inputs.force_build == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      # pnpm store Ï∫êÏãú
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # Astro ÎπåÎìú Ï∫êÏãú
      - name: Setup Astro build cache
        uses: actions/cache@v4
        with:
          path: |
            .astro
            node_modules/.astro
            node_modules/.vite
          key: ${{ runner.os }}-astro-build-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('src/**', 'astro.config.mjs') }}
          restore-keys: |
            ${{ runner.os }}-astro-build-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-astro-build-

      # Notion ÏΩòÌÖêÏ∏† Ï∫êÏãú
      - name: Setup Notion content cache
        uses: actions/cache@v4
        with:
          path: |
            .astro/data-store.json
            .notion-cache
            .notion-last-update.json
          key: ${{ runner.os }}-notion-content-${{ hashFiles('.notion-last-update.json') }}
          restore-keys: |
            ${{ runner.os }}-notion-content-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check for Notion updates
        id: check-updates
        if: github.event.inputs.force_build != 'true'
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        run: |
          set +e
          OUTPUT=$(node scripts/check-notion-updates.js 2>&1)
          EXIT_CODE=$?
          set -e

          echo "$OUTPUT"

          if [ $EXIT_CODE -eq 0 ]; then
            if echo "$OUTPUT" | grep -q "Updates detected"; then
              echo "has_updates=true" >> $GITHUB_OUTPUT
            else
              echo "has_updates=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "Check failed, proceeding with build"
            echo "has_updates=true" >> $GITHUB_OUTPUT
          fi

      - name: Build site
        if: steps.check-updates.outputs.has_updates == 'true' || github.event.inputs.force_build == 'true'
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
          PUBLIC_SITE_URL: ${{ vars.PUBLIC_SITE_URL }}
          PUBLIC_SITE_TITLE: ${{ vars.PUBLIC_SITE_TITLE }}
          PUBLIC_SITE_DESCRIPTION: ${{ vars.PUBLIC_SITE_DESCRIPTION }}
          PUBLIC_AUTHOR_NAME: ${{ vars.PUBLIC_AUTHOR_NAME }}
          PUBLIC_AUTHOR_EMAIL: ${{ vars.PUBLIC_AUTHOR_EMAIL }}
          PUBLIC_GITHUB_URL: ${{ vars.PUBLIC_GITHUB_URL }}
          PUBLIC_UMAMI_WEBSITE_ID: ${{ vars.PUBLIC_UMAMI_WEBSITE_ID }}
          PUBLIC_UMAMI_SRC: ${{ vars.PUBLIC_UMAMI_SRC }}
        run: |
          echo "üèóÔ∏è Building site..."
          pnpm build
          echo "‚úÖ Build completed"

      # Ï∫êÏãú Ï†ÄÏû•ÏùÑ ÏúÑÌïú ÏïÑÌã∞Ìå©Ìä∏ ÏóÖÎ°úÎìú
      - name: Save cache artifacts
        if: steps.check-updates.outputs.has_updates == 'true' || github.event.inputs.force_build == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: astro-cache
          path: |
            .astro/data-store.json
            .notion-last-update.json
          retention-days: 7

      - name: Upload pages artifact
        if: steps.check-updates.outputs.has_updates == 'true' || github.event.inputs.force_build == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: check-and-build
    if: needs.check-and-build.outputs.should_deploy == 'true'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
