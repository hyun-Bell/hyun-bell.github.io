name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

env:
  NODE_VERSION: '20'
  PNPM_VERSION: 9

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup Astro build cache
        uses: actions/cache@v4
        with:
          path: |
            .astro
            node_modules/.astro
            node_modules/.vite
          key: ${{ runner.os }}-astro-build-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('src/**', 'astro.config.mjs') }}
          restore-keys: |
            ${{ runner.os }}-astro-build-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-astro-build-

      - name: Setup Notion content cache
        uses: actions/cache@v4
        with:
          path: |
            .astro/data-store.json
            .notion-cache
          key: ${{ runner.os }}-notion-content-${{ hashFiles('.astro/data-store.json') }}
          restore-keys: |
            ${{ runner.os }}-notion-content-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build site
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
          PUBLIC_SITE_URL: ${{ vars.PUBLIC_SITE_URL }}
          PUBLIC_SITE_TITLE: ${{ vars.PUBLIC_SITE_TITLE }}
          PUBLIC_SITE_DESCRIPTION: ${{ vars.PUBLIC_SITE_DESCRIPTION }}
          PUBLIC_AUTHOR_NAME: ${{ vars.PUBLIC_AUTHOR_NAME }}
          PUBLIC_AUTHOR_EMAIL: ${{ vars.PUBLIC_AUTHOR_EMAIL }}
          PUBLIC_GITHUB_URL: ${{ vars.PUBLIC_GITHUB_URL }}
        run: |
          echo "üèóÔ∏è Building site..."
          pnpm build
          echo "‚úÖ Build completed"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
